
@model V3_Movie_MVC_RepoPattern_EF_CodeFirst_Identity.ViewModels.ActorMoviesViewModel

@{
    ViewData["Title"] = "GetMoviesByActor";
}

<h1>GetMoviesByActor</h1>

<div>
    <form asp-action="GetMoviesByActor">
        <div class="form-group">
            <label class="control-label">Select Actor</label>
            <select class="form-control" required name="id"
                    asp-for="Actors"
                    asp-items="Model.Actors">
                <option value="" disabled="disabled" selected="selected">
                    --Please select--
                </option>
            </select>
            <input type="submit" value="Search" class="btn btn-primary" />
        </div>
    </form>
</div>

@if (Model.Movies != null && Model.Movies.Count() > 0)
{
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Movies.FirstOrDefault().Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies.FirstOrDefault().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies.FirstOrDefault().ReleaseDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies.FirstOrDefault().Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies.FirstOrDefault().Rating)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Movies)
{
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rating)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
            </td>
        </tr>
}
    </tbody>
</table>
}

@if (Model.Movies != null && Model.Movies.Count() == 0)
{
    <label>No movies found</label>
}